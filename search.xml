<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Ansible模块编写</title>
      <link href="//blog/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0.html"/>
      <content type="html"><![CDATA[<p>使用 Ansible 自定义模块功能编写日常使用功能.</p><a id="more"></a><h1 id="Ansible-远程服务器连接-Internet-测试"><a href="#Ansible-远程服务器连接-Internet-测试" class="headerlink" title="Ansible 远程服务器连接 Internet 测试"></a>Ansible 远程服务器连接 Internet 测试</h1><p>Email 连接: <a href="mailto:&#108;&#x6f;&#x6e;&#110;&#121;&#108;&#105;&#x75;&#64;&#49;&#50;&#x36;&#x2e;&#99;&#x6f;&#x6d;" target="_blank" rel="noopener">&#108;&#x6f;&#x6e;&#110;&#121;&#108;&#105;&#x75;&#64;&#49;&#50;&#x36;&#x2e;&#99;&#x6f;&#x6d;</a></p><hr><p><strong>需求</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">在使用Ansible过程中不可避免需要了解远端服务器是否能够联通外网,以便进行在线安装软件或者其他.对于运维人员来说普遍的办法有</span><br><span class="line"></span><br><span class="line">1. 登录到每台服务器进行 ping 测试(基本上这个时候 `www.baidu.com` 派上用场了)</span><br><span class="line">2. 使用Ansible直接对以定义好的主机进行远端执行shell命令</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">以上两种第一种有可能是普遍的方式,第二种有一部分人在使用但也不否定有其他更好的办法</span><br></pre></td></tr></table></figure><p><strong>目标</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">快速获取远端服务器连接 Internet 情况</span><br></pre></td></tr></table></figure><p><strong>实现</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 配置Ansible 关闭或者使用缓存进行 facts 收集</span><br><span class="line">2. 进行自定义模块进行远端服务器连接 Internet 测试</span><br><span class="line">3. 收集结果结果做后续使用</span><br></pre></td></tr></table></figure><p><strong>代码</strong></p><ul><li>ansible 配置文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat /etc/ansible.cfg</span></span><br><span class="line">[defaults]</span><br><span class="line">hostfile =  path <span class="comment"># hosts 文件存放位置</span></span><br><span class="line">roles_path = path <span class="comment"># roles 角色目录存放位置</span></span><br><span class="line">library = path <span class="comment"># 自定义模块存放问题</span></span><br><span class="line">remote_user = root <span class="comment"># 远程连接用户</span></span><br><span class="line">private_key_file = path <span class="comment"># 公钥存放位置</span></span><br><span class="line">host_key_checking = False</span><br><span class="line">deprecation_warnings=False</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置使用本地 redis 缓存--自行配置</span></span><br><span class="line">gathering = smart</span><br><span class="line">fact_caching = redis</span><br><span class="line">fact_caching_timeout = 86400</span><br><span class="line">fact_caching_connection = 127.0.0.1:6379:0:ansiblefact</span><br></pre></td></tr></table></figure><ul><li>自定义模块</li></ul><p><a href="http://docs.ansible.com/ansible/latest/dev_guide/developing_modules.html" target="_blank" rel="noopener">具体模块介绍请查看官网链接</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*- </span></span><br><span class="line"><span class="comment"># Author EdwardLiu</span></span><br><span class="line"></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">检测是否可以连通外网, 使用 url方式, url 为可变参数</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> ansible.module_utils.basic <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> urllib2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">internet_on</span><span class="params">(url)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line"></span><br><span class="line">        urllib2.urlopen(url, timeout=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        results = &#123;</span><br><span class="line">            <span class="string">'status'</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="string">'messages'</span>: <span class="string">"Connection"</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> results</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> urllib2.URLError <span class="keyword">as</span> err:</span><br><span class="line"></span><br><span class="line">        results = &#123;</span><br><span class="line">            <span class="string">'status'</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="string">'messages'</span>: <span class="string">"Failed"</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> results</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    refactor_module = AnsibleModule(</span><br><span class="line">        argument_spec=dict(</span><br><span class="line">            url=dict(required=<span class="keyword">True</span>),</span><br><span class="line">        ),</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    url = <span class="string">"http://"</span> + refactor_module.params[<span class="string">'url'</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> internet_on(url)[<span class="string">'status'</span>] == <span class="number">0</span>:</span><br><span class="line"></span><br><span class="line">        result = dict(module=<span class="string">'timezone'</span>, stdotut=internet_on(url)[<span class="string">'messages'</span>], changed=<span class="keyword">False</span>, rc=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        refactor_module.exit_json(**result)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line"></span><br><span class="line">        result = dict(msg=<span class="string">'execute failed'</span>, rc=internet_on(url)[<span class="string">'status'</span>])</span><br></pre></td></tr></table></figure><p><strong>使用介绍</strong></p><p>  ansible–Ad-Hoc Commands(使用命令行)</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ansible pipeline -m checknetwork -a <span class="string">"url=www.baidu.com"</span></span><br><span class="line">pipeline: hosts 文件中组名称</span><br><span class="line">checknetwork: 自定义模块名称</span><br><span class="line">url=www.baidu.com 测试外网连接的 URL</span><br></pre></td></tr></table></figure><p>效果:<br><img src="http://p5m69ggo7.bkt.clouddn.com/ansible_custom-moudle.jpg" alt=""></p><p><strong>附ansible playbooks使用案例</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="comment"># 判断是否有外网</span></span><br><span class="line">- name: checkne internet connection</span><br><span class="line">  checknetwork: url=&#123;&#123; check_url &#125;&#125;</span><br><span class="line">  register: result</span><br><span class="line"></span><br><span class="line">- debug:</span><br><span class="line">    msg: <span class="string">"System &#123;&#123; inventory_hostname &#125;&#125; has Connection internet!!!"</span></span><br><span class="line">  when: result.stdotut == <span class="string">'Connection'</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ansible </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
